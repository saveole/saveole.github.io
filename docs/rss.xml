<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>救救索尔</title><link>https://saveole.github.io</link><description>Choose life,choose coding</description><copyright>救救索尔</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/140253011?v=4</url><title>avatar</title><link>https://saveole.github.io</link></image><lastBuildDate>Thu, 26 Oct 2023 12:32:42 +0000</lastBuildDate><managingEditor>救救索尔</managingEditor><pubDate>Thu, 26 Oct 2023 12:32:42 +0000</pubDate><ttl>60</ttl><webMaster>救救索尔</webMaster><item><title>Win10 Docker 环境安装及设置</title><link>https://saveole.github.io/post/Win10%20Docker%20-huan-jing-an-zhuang-ji-she-zhi.html</link><description>- 前置步骤&#13;
    - 安装 WSL2 - [安装 WSL | Microsoft Learn](https://learn.microsoft.com/zh-cn/windows/wsl/install)&#13;
    - 在 **设置 &gt; 应用 &gt; 程序和功能 &gt; 启用或关闭 Windows 功能** 中勾选 **Hyper-V** 和 **适用于 Linux 的 Windows 子系统**&#13;
    - 重启电脑&#13;
    - 安装 Linux 发行版&#13;
        &#13;
        ```powershell&#13;
        # 列出可用 linux 发行版本&#13;
        wsl --list --online&#13;
        # 安装选定发行版&#13;
        wsl --install -d &lt;Distribution Name&gt;&#13;
        # 查看 wsl 安装信息&#13;
        wsl -l -v&#13;
        ```&#13;
        &#13;
- 下载 Docker Desktop for Windows 并安装&#13;
- Docker Desktop 默认安装到 C 盘，可以将它的数据存储到其他盘&#13;
    &#13;
    ```powershell&#13;
    # 先备份 docker-desktop 和 docker-desktop-data 数据&#13;
    wsl --export docker-desktop docker-desktop.tar&#13;
    wsl --export docker-desktop-data docker-desktop-data.tar&#13;
    &#13;
    # 卸载 wsl 中的 docker-desktop 和 docker-desktop-data&#13;
    wsl --unregister docker-desktop&#13;
    wsl --unregister docker-desktop-data&#13;
    &#13;
    # 在其他盘创建存储目录并导入之前的数据&#13;
    wsl --import docker-desktop D:\data\docker-desktop docker-desktop.tar&#13;
    wsl --import docker-desktop-data D:\data\docker-desktop-data docker-desktop-data.tar&#13;
    ```&#13;
    &#13;
- 重启电脑&#13;
- 遇到的问题&#13;
    - docker desktop 卸载重装后不能启动&#13;
        &#13;
        ```&#13;
        原因：没有在 启用或关闭 Windows 功能 中勾选 Hyper-V&#13;
        ```&#13;
        &#13;
    - `wsl —list —online` 一直没有响应&#13;
        &#13;
        ```&#13;
        启用或关闭 Windows 功能 设置变更后需要重启电脑生效&#13;
        ```&#13;
&lt;!-- ##{"timestamp":1684319502}## --&gt;。</description><guid isPermaLink="true">https://saveole.github.io/post/Win10%20Docker%20-huan-jing-an-zhuang-ji-she-zhi.html</guid><pubDate>Wed, 17 May 2023 10:31:42 +0000</pubDate></item><item><title>Spring Boot MVC 自定义参数解析器</title><link>https://saveole.github.io/post/Spring%20Boot%20MVC%20-zi-ding-yi-can-shu-jie-xi-qi.html</link><description>## 背景&#13;
&#13;
&gt; `遗留系统`：&#13;
&gt;&#13;
&gt; ​		遗留接口系统为 Golang + Gin + MongoDB 实现, MongoDB collection 的 field 字段为中文名而且不固定(可以通过 excel 文件自定义表头的形式添加), 查询参数是直接传的中文形式, 而且传参不固定(query参数的 key 和 value 都不固定)，如：**/api/v1/customers?姓名=张三&amp;录入时间=2022-09-01 00:00:00&amp;录入时间=2022-09-02 23:59:59**&#13;
&gt;&#13;
&gt; `问题`：&#13;
&gt;&#13;
&gt; ​		go 工程师离职, 后端只有 java 工程师的情况下，将此接口改用 java 重写一遍，但传参方式不变(query key 还是为中文)&#13;
&#13;
## 实现&#13;
&#13;
&#13;
&#13;
### 可选方案&#13;
&#13;
- **方案一**：不用 java 改写，java 工程师维护 golang 项目&#13;
  - 优点：代码改动最小，出现 bug 的概率也最小&#13;
  - 缺点：需要花时间学习 go 语言和相关项目&#13;
- **方案二**：获取 HttpServletRequset 对象, 在相应的接口入口层进行参数处理&#13;
  - 优点：能够获取到所有参数，快速实现功能&#13;
  - 缺点：针对特定接口实现，不利于代码扩展&#13;
- **方案三**：自定义 MVC 层参数解析器解析请求参数并绑定&#13;
  - 优点：能够抽取此类需求的公共参数,结合反射和注解机制利于相似需求的扩展&#13;
  - 缺点：相对于方案二性能可能会差一点。</description><guid isPermaLink="true">https://saveole.github.io/post/Spring%20Boot%20MVC%20-zi-ding-yi-can-shu-jie-xi-qi.html</guid><pubDate>Tue, 09 May 2023 12:21:43 +0000</pubDate></item></channel></rss>